{"version":3,"sources":["script.js"],"names":["Balance","document","getElementById","money_plus","money_minus","list","text","amount","dummyTransction","id","localStorageTransactions","JSON","parse","localStorage","getItem","transactions","addTransaction","e","preventDefault","value","trim","alert","transaction","generateID","push","addTransactionDOM","updateValues","updateLocalStorage","Math","floor","random","sign","item","createElement","classList","add","innerHTML","abs","appendChild","amounts","map","total","reduce","acc","toFixed","income","filter","expense","innerText","removeTransaction","init","setItem","stringify","forEach","addEventListener"],"mappings":";AAAA,IAAMA,EAAUC,SAASC,eAAe,WAClCC,EAAaF,SAASC,eAAe,cACrCE,EAAcH,SAASC,eAAe,eACtCG,EAAOJ,SAASC,eAAe,QAC/BI,EAAOL,SAASC,eAAe,QAC/BK,EAASN,SAASC,eAAe,UAGjCM,EAAkB,CACxB,CAAEC,GAAI,EAAGH,KAAM,SAAUC,QAAS,IAClC,CAAEE,GAAI,EAAGH,KAAM,SAAUC,OAAQ,KACjC,CAAEE,GAAI,EAAGH,KAAM,OAAQC,QAAS,IAChC,CAAEE,GAAI,EAAGH,KAAM,SAAUC,OAAQ,MAY3BG,EAA2BC,KAAKC,MACpCC,aAAaC,QAAQ,iBAGlBC,EACuC,OAAzCF,aAAaC,QAAQ,gBAA2BJ,EAA2B,GAQ9E,SAASM,EAAeC,GAGnBX,GAFHW,EAAEC,iBAEuB,KAAtBZ,EAAKa,MAAMC,QAAyC,KAAxBb,EAAOY,MAAMC,OAC1CC,MAAM,oCACD,CACCC,IAAAA,EAAc,CAClBb,GAAIc,IACJjB,KAAMA,EAAKa,MACXZ,QAASA,EAAOY,OAGlBJ,EAAaS,KAAKF,GAElBG,EAAkBH,GAElBI,IAEAC,IAEArB,EAAKa,MAAQ,GACbZ,EAAOY,MAAQ,IAKnB,SAASI,IACAK,OAAAA,KAAKC,MAAsB,IAAhBD,KAAKE,UAIzB,SAASL,EAAkBH,GAEnBS,IAAAA,EAAOT,EAAYf,OAAS,EAAI,IAAM,IAEtCyB,EAAO/B,SAASgC,cAAc,MAGpCD,EAAKE,UAAUC,IAAIb,EAAYf,OAAS,EAAI,QAAU,QAEtDyB,EAAKI,UAAed,GAAAA,OAAAA,EAAYhB,KAAcyB,WAAAA,OAAAA,GAAOH,OAAAA,KAAKS,IAAIf,EAAYf,QAAwEe,kEAAAA,OAAAA,EAAYb,GAA9J,iBAEAJ,EAAKiC,YAAYN,GAInB,SAASN,IACDa,IAAAA,EAAUxB,EAAayB,IAAI,SAAAlB,GAAeA,OAAAA,EAAYf,SAEtDkC,EAAQF,EAAQG,OAAO,SAACC,EAAKX,GAAUW,OAAAA,EAAOX,GAAO,GAC1DY,QAAQ,GAEHC,EAASN,EACZO,OAAO,SAAAd,GAAQA,OAAAA,EAAO,IACtBU,OAAO,SAACC,EAAKX,GAAUW,OAAAA,EAAOX,GAAO,GACrCY,QAAQ,GAELG,IACwE,EAA5ER,EAAQO,OAAO,SAAAd,GAAQA,OAAAA,EAAO,IAAGU,OAAO,SAACC,EAAKX,GAAUW,OAAAA,EAAOX,GAAO,IAASY,QAAQ,GAEvF5C,EAAQgD,UAAkBP,MAAAA,OAAAA,GAC1BtC,EAAW6C,UAAkBH,MAAAA,OAAAA,GAC7BzC,EAAY4C,UAAkBD,MAAAA,OAAAA,GAKlC,SAASE,EAAkBxC,GACzBM,EAAeA,EAAa+B,OAAO,SAAAxB,GAAeA,OAAAA,EAAYb,KAAOA,IAErEyC,IAEAvB,IAIF,SAASA,IACPd,aAAasC,QAAQ,eAAgBxC,KAAKyC,UAAUrC,IAItD,SAASmC,IACP7C,EAAK+B,UAAY,GAEjBrB,EAAasC,QAAQ5B,GACrBC,IAGFwB,IAEAI,iBAAiB,SAAUtC","file":"script.bf2f1f44.js","sourceRoot":"..","sourcesContent":["const Balance = document.getElementById('balance');\nconst money_plus = document.getElementById('money-plus');\nconst money_minus = document.getElementById('money-minus');\nconst list = document.getElementById('list');\nconst text = document.getElementById('text');\nconst amount = document.getElementById('amount');\n\n\nconst dummyTransction = [\n{ id: 1, text: 'Flower', amount: -20 },\n{ id: 2, text: 'Salary', amount: 300 },\n{ id: 3, text: 'Book', amount: -10 },\n{ id: 4, text: 'Camera', amount: 150 }\n\n];\n\n\n//  let appu = [\n//    { id: 1, text: 'Flowerss', amount: -200 },\n//  { id: 2, text: 'Salaryss', amount: 3000 },\n//  { id: 3, text: 'Bookss', amount: -100 },\n//  { id: 4, text: 'Camerass', amount: 1500 }\n//  ]\n\nconst localStorageTransactions = JSON.parse(\n  localStorage.getItem('transactions')\n);\n\n let transactions = \n   localStorage.getItem('transactions') !== null ? localStorageTransactions : [];\n\n\n\n// let transactions = dummyTransction;\n// console.log(transactions);\n\n//Add transaction\nfunction addTransaction(e) {\n  e.preventDefault();\n\n  if(text.value.trim() === '' || amount.value.trim() === '') {\n    alert('Please add a text and amount');\n  } else {\n    const transaction = {\n      id: generateID(),\n      text: text.value,\n      amount: +amount.value\n    };\n\n    transactions.push(transaction);\n\n    addTransactionDOM(transaction);\n\n    updateValues();\n\n    updateLocalStorage()\n\n    text.value = '';\n    amount.value = '';\n  }\n}\n\n// Generate random ID\nfunction generateID() {\n  return Math.floor(Math.random() * 1000000);\n}\n\n//Add transactions to DOM list\nfunction addTransactionDOM(transaction) {\n  // Get sign\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  const item = document.createElement('li');\n\n  // Add class based on value\n  item.classList.add(transaction.amount < 0 ? 'minus' : 'plus');\n\n  item.innerHTML = `${transaction.text} <span>${sign}${Math.abs(transaction.amount)}</span> <button class=\"delete-btn\" onclick=\"removeTransaction(${transaction.id})\">x</button>`;\n\n  list.appendChild(item);\n\n}\n\nfunction updateValues() {\n  const amounts = transactions.map(transaction => transaction.amount);\n\n  const total = amounts.reduce((acc, item) => (acc += item), 0)\n  .toFixed(2);\n\n  const income = amounts\n    .filter(item => item > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = (\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) * -1).toFixed(2);\n\n    Balance.innerText = `RS.${total}`;\n    money_plus.innerText = `RS.${income}`;\n    money_minus.innerText = `RS.${expense}`;\n   \n}\n\n// REmove transaction by ID\nfunction removeTransaction(id) {\n  transactions = transactions.filter(transaction => transaction.id !== id);\n\n  init();\n\n  updateLocalStorage();\n}\n\n// Update local storage transactions\nfunction updateLocalStorage() {\n  localStorage.setItem('transactions', JSON.stringify(transactions));\n}\n\n// Init app\nfunction init() {\n  list.innerHTML = '';\n\n  transactions.forEach(addTransactionDOM);\n  updateValues();\n}\n\ninit();\n\naddEventListener('submit', addTransaction)\n\n\n"]}